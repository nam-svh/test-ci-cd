name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FVM_HOME: /home/runner/.fvm
      FVM_USE_LOCAL_MIRROR: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache .fvm directory (in project) + FVM_HOME (global versions)
    - name: Cache FVM (project + global versions)
      uses: actions/cache@v4
      with:
        path: |
          .fvm
          ${{ env.FVM_HOME }}/versions
        key: ${{ runner.os }}-fvm-${{ hashFiles('.fvm/fvm_config.json') }}
        restore-keys: |
          ${{ runner.os }}-fvm-

    # Setup Dart SDK
    - name: Download Dart SDK
      uses: dart-lang/setup-dart@v1

    # Activate global packages
    - name: Activate FVM and Melos globally
      run: |
        dart pub global activate fvm
        dart pub global activate melos

    # Add pub-cache bin to PATH
    - name: Add global pub-cache bin to PATH
      run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

    # Install Flutter SDK from FVM config without local mirror
    - name: Install Flutter SDK from FVM config
      run: |
        fvm install --no-local-mirror
        fvm use --force
        fvm flutter --version
        fvm list

    # Optional: Bootstrap Melos (for monorepo)
    # - name: Bootstrap Melos
    #   run: fvm flutter pub get && melos bootstrap

    # Optional: Run Tests
    # - name: Run Tests
    #   run: fvm flutter test
